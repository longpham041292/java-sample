<?xml version="1.0" encoding="UTF-8" ?>
<entity-mappings version="2.1" xmlns="http://xmlns.jcp.org/xml/ns/persistence/orm"
                 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                 xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/persistence/orm
                http://xmlns.jcp.org/xml/ns/persistence/orm_2_1.xsd">

    <named-native-query name="MVSessionDailyEntity.SessionFinancialReport" result-set-mapping="UsedSessionsFinancialResultsetMapping">
        <query>
            SELECT ss.session_uuid sessionUuid,
                so.product_name,
                so.uuid orderUuid,
                so.product_uuid,
                ss.status,
                sese.last_status,
                so.price,
                so.commission,
                so.num_of_sessions,
                so.order_date,
                sese.start_time as session_created_time,
                sese.pt_uuid, 
                sese.user_uuid,
                so.expired_date,
                su.full_name as userFullName ,
                su.username as userusername ,
                opt.full_name as trainerName ,
                opt.username as trainerusername,
                NULL as oldPtUuid,

                so.order_code,
                opt.club_code as user_clubcode,
                so.order_clubcode,
                su.user_code as member_barcode,
                opt.user_code as trainer_code,
                DATE_FORMAT(CONVERT_TZ(sese.start_time, '+00:00', :timeZone), '%H %i') as sessionTime,
                
                o.coupon_code,
                pmt.pt_commission,
                o.free_order,
                so.contract_number,
           		sese.checkin_club_name
                
            FROM session_session_daily_mv ss
                join session_session_packages pkg ON (ss.package_uuid = pkg.uuid)
                join session_orders so ON (pkg.order_uuid = so.uuid)
           		JOIN orders o ON so.order_code = o.code
   				LEFT JOIN promotion pmt ON pmt.coupon_code = o.coupon_code
                LEFT JOIN session_sessions sese ON sese.uuid = ss.session_uuid
                LEFT JOIN session_users su ON (su.uuid = sese.user_uuid)
                LEFT JOIN session_users opt ON (opt.uuid = sese.pt_uuid)
            WHERE UNIX_TIMESTAMP(sese.start_time) between :startDate and :endDate
            ORDER BY ss.session_created_time
        </query>
    </named-native-query>

    <named-native-query name="MVSessionDailyEntity.FreeSessionFinancialReport" result-set-mapping="SessionFinancialResultsetMapping">
        <query>
            SELECT ss.session_uuid sessionUuid,
                so.product_name,
                so.uuid orderUuid,
                so.product_uuid,
                ss.status,
                sese.last_status,
                so.price,
                so.commission,
                so.num_of_sessions,
                so.order_date,
                ss.session_created_time,
                sese.pt_uuid,
                sese.user_uuid,
                so.expired_date ,
                su.full_name as userFullName,
                su.username as userusername ,
                opt.full_name as trainerName ,
                opt.username as trainerusername,
                NULL as oldPtUuid,

                so.order_code,
                opt.club_code as user_clubcode,
                so.order_clubcode,
                su.user_code as member_barcode,
                opt.user_code as trainer_code,
                DATE_FORMAT(CONVERT_TZ(sese.start_time, '+00:00', :timeZone), '%H %i') as sessionTime
            FROM session_session_daily_mv ss
                join session_session_packages pkg on ss.package_uuid = pkg.uuid
                JOIN session_orders so ON pkg.order_uuid = so.uuid
                LEFT JOIN session_sessions sese ON sese.uuid = ss.session_uuid
                LEFT JOIN session_users su ON su.uuid = sese.user_uuid
                LEFT JOIN session_users opt ON opt.uuid = sese.pt_uuid
            WHERE so.free_order > 0 AND UNIX_TIMESTAMP(so.order_date) between :startDate and :endDate
            ORDER BY so.order_date
        </query>
    </named-native-query>

    <named-native-query name="MVSessionStatsDailyEntity.getTransferredFinancialReport" result-set-mapping="SessionFinancialResultsetMapping">
        <query>
            SELECT ss.session_uuid sessionUuid,
            so.product_name,
            so.uuid orderUuid,
            so.product_uuid,
            NULL as status,
            sese.last_status,
            so.price,
            so.commission,
            so.num_of_sessions,
            so.order_date,
            ss.stats_date as session_created_time,
            pkg.pt_uuid,
            pkg.user_uuid,
            so.expired_date,
            ss.old_pt_uuid as oldPtUuid,
            su.full_name as userFullName ,
            su.username as userusername ,
            opt.full_name as trainerName ,
            opt.username as trainerusername,

            so.order_code,
            opt.club_code as user_clubcode,
            so.order_clubcode,
            su.user_code as member_barcode,
            opt.user_code as trainer_code,
            DATE_FORMAT(CONVERT_TZ(sese.start_time, '+00:00', ?3), '%H %i') as sessionTime
            FROM session_session_stats_daily_mv ss
            join session_session_packages pkg on ss.package_uuid = pkg.uuid
            join session_orders so on pkg.order_uuid = so.uuid
            LEFT JOIN session_users su ON su.uuid = ss.user_uuid
            LEFT JOIN session_users opt ON opt.uuid = ss.pt_uuid
            LEFT JOIN session_sessions sese ON sese.uuid = ss.session_uuid
            WHERE (ss.stats_local_date between ?1 and ?2) and ss.transferred > 0
            GROUP BY ss.session_uuid
            ORDER BY ss.session_uuid
        </query>
    </named-native-query>

    <named-native-query name="MVSessionStatsDailyEntity.getOpenFinancialReport" result-set-mapping="SessionFinancialResultsetMapping">
        <query>
            <![CDATA[
                SELECT ss.session_uuid sessionUuid,
                    so.product_name,
                    so.uuid orderUuid,
                    so.product_uuid,
                    NULL as status,
                    sese.last_status,
                    so.price,
                    so.commission,
                    so.num_of_sessions,
                    so.order_date,
                    ss.stats_date as session_created_time,
                    sese.pt_uuid,
                    sese.user_uuid,
                    so.expired_date ,
                    NULL as oldPtUuid,
                    su.full_name as userFullName ,
                    su.username as userusername ,
                    opt.full_name as trainerName ,
                    opt.username as trainerusername,

                    so.order_code,
                    opt.club_code as user_clubcode,
                    so.order_clubcode,
                    su.user_code as member_barcode,
                    opt.user_code as trainer_code,
                    DATE_FORMAT(CONVERT_TZ(sese.start_time, '+00:00', ?3), '%H %i') as sessionTime
                FROM session_session_stats_daily_mv ss
                    join session_session_packages pkg on ss.package_uuid = pkg.uuid
                    join session_orders so on pkg.order_uuid = so.uuid
                    LEFT JOIN session_sessions sese ON sese.uuid = ss.session_uuid
                    LEFT JOIN session_users su ON su.uuid = sese.user_uuid
                    LEFT JOIN session_users opt ON opt.uuid = sese.pt_uuid
                WHERE (so.order_date between ?1 and ?2)
                    and (ss.open > 0 or ss.pending > 0 or ss.cancelled > 0 or ss.pt_cancelled > 0)
                    AND (so.expired_date IS NULL OR so.expired_date >= ?2)
                GROUP BY ss.session_uuid
                ORDER BY ss.session_uuid
            ]]>
        </query>
    </named-native-query>


    <sql-result-set-mapping name="SessionFinancialResultsetMapping">
        <constructor-result target-class="asia.cmg.f8.session.wrapper.dto.SessionFinancial">
            <column name="sessionUuid"/>
            <column name="product_name"/>
            <column name="orderUuid"/>
            <column name="product_uuid"/>
            <column name="status" class="java.lang.String"/>
            <column name="last_status" class="java.lang.String"/>
            <column name="price"/>
            <column name="commission"/>
            <column name="num_of_sessions"/>
            <column name="order_date"/>
            <column name="session_created_time"/>
            <column name="pt_uuid"/>
            <column name="user_uuid"/>
            <column name="expired_date"/>
            <column name="userFullName"/>
            <column name="userusername"/>
            <column name="trainerName"/>
            <column name="trainerusername"/>
            <column name="oldPtUuid" class="java.lang.String"/>

            <column name="order_code"/>
            <column name="user_clubcode"/>
            <column name="order_clubcode"/>
            <column name="member_barcode"/>
            <column name="trainer_code"/>
            <column name="sessionTime"/>
        </constructor-result>
    </sql-result-set-mapping>
    
    <sql-result-set-mapping name="UsedSessionsFinancialResultsetMapping">
        <constructor-result target-class="asia.cmg.f8.session.wrapper.dto.SessionFinancial">
            <column name="sessionUuid"/>
            <column name="product_name"/>
            <column name="orderUuid"/>
            <column name="product_uuid"/>
            <column name="status" class="java.lang.String"/>
            <column name="last_status" class="java.lang.String"/>
            <column name="price"/>
            <column name="commission"/>
            <column name="num_of_sessions"/>
            <column name="order_date"/>
            <column name="session_created_time"/>
            <column name="pt_uuid"/>
            <column name="user_uuid"/>
            <column name="expired_date"/>
            <column name="userFullName"/>
            <column name="userusername"/>
            <column name="trainerName"/>
            <column name="trainerusername"/>
            <column name="oldPtUuid" class="java.lang.String"/>

            <column name="order_code"/>
            <column name="user_clubcode"/>
            <column name="order_clubcode"/>
            <column name="member_barcode"/>
            <column name="trainer_code"/>
            <column name="sessionTime"/>
            
            <column name="coupon_code"/>
            <column name="pt_commission" class="java.lang.Double"/>
            <column name="free_order" class="java.lang.Integer"/>
            <column name="contract_number"/>
            <column name="checkin_club_name"/>
        </constructor-result>
    </sql-result-set-mapping>

</entity-mappings>


