server.port: 7788
spring:
  application.name: report-service
  sleuth:
    feign:
      enabled: false
    integration:
      enabled: false
    rxjava:
      schedulers:
        hook:
          enabled: false
  cloud:
    stream:
      bindings:
        changeSessionStatusInput:
          destination: sessionStatusTopic
          contentType: avro/bytes
          group: reportSessionStatusGroup
        orderCompletedInput:
          destination: orderCompletedTopic
          contentType: avro/bytes  
          group: reportOrderCompleteGroup
        orderTotalSessionInput:
          destination: orderCompletedTopic
          contentType: avro/bytes
          group: reportTotalSessionGroup
          
  datasource:
    type: com.zaxxer.hikari.HikariDataSource
    url: jdbc:mysql://${DATABASE_URL:54.254.246.56:3306}/${DB_NAME:f8}?useUnicode=true&characterEncoding=utf8&useLegacyDatetimeCode=false&serverTimezone=UTC
    username: ${DB_USER:root}
    password: ${DB_PWD:YXA6khvrxqKqt0ytw-WG_OF8RzOk2KY}
    initialize: false
    hikari:
      maximum-pool-size: ${CONNECTION_POOL_SIZE:50}
      minimum-idle: 2

report:
  secretKey: ${SECRET_KEY:XlF-u1nnLL4fd971dQy2Rq-Ri1SO7pKK}
  leepAccountUuid: ${LEEP_ACCOUNT_UUID:58bf34d1-2ba7-11ea-a0d3-0a580a820367}
  vat: ${VAT_VALUE:11}
  pit: ${PIT_VALUE:0.1}
  database:
    initDb: ${DB_INITIALIZE:false}
    initDbSource: ${DB_INITILIZE_SOURCE:data.sql}

feign:
  url: ${USERGRID_ENDPOINT:http://usergrid.leep.center}/${ORG_NAME:cmg}/${APP_NAME:f8}
  hystrix:
     threadpool:
        default:
            # Maximum number of concurrent requests when using thread pools (Default: 10)
            coreSize: ${HYSTRIX_THREAD_POOL_SIZE:200}
            # Maximum LinkedBlockingQueue size - -1 for using SynchronousQueue (Default: -1)
            maxQueueSize: -1
     command:
          default:
              execution:
                timeout:
                    enabled: false
                isolation:
                  #          strategy: SEMAPHORE, no thread pool but timeout handling stops to work
                    strategy: THREAD
                    thread:
                        timeoutInMilliseconds: ${THREAD_TIME_OUT:600000}
              fallback:
                  isolation:
                      semaphore:
                          maxConcurrentRequests: ${HYSTRIX_THREAD_POOL_SIZE:200}

userGrid:
  clientId: ${USERGRID_CLIENTID:YXA6lbnfWtKQEei_9gpYCoAAaw}
  clientSecret: ${USERGRID_CLIENTSECRET:YXA6khvrxqKqt0ytw-WG_OF8RzOk2KY}

spring.cloud.stream.kafka.binder:
    zkNodes: ${ZOOKEEPER_ENDPOINT:54.254.246.56:2181}
    brokers: ${KAFKABROKER_ENDPOINT:54.254.246.56:9092}
management:
  context-path: /report-management/actuator  